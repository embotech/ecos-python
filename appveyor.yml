# Attempts to build ECOS in Python 2 and Python 3 on Windows
#
# https://packaging.python.org/guides/supporting-windows-using-appveyor/
environment:
  matrix:
    - PYTHON: "C:\\Python27"
    - PYTHON: "C:\\Python34"
    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python36"
    #- PYTHON: "C:\\Python27-x64"
    - PYTHON: "C:\\Python34-x64"
      DISTUTILS_USE_SDK: "1"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36-x64"

install:
  # initialize the submodule
  - git submodule update --init --recursive

  # store version into file and use file to set envvar because i don't
  # know windows
  - git describe --tags --always --dirty=.dirty | sed 's/v\(.*\)/\1/' |  sed 's/\([0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\)\(rc[0-9]*\)\{0,1\}-\([0-9][0-9]*\)-\(g.*\)/\1\2.dev\3+\4/' > _version
  - set /p TAG= < _version
  - ECHO __version__="%TAG%" > src\ecos\version.py
  - type src\ecos\version.py

  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # install needed dependencies, and pre-install numpy, scipy
  - "%PYTHON%\\python.exe -m pip install wheel numpy scipy"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  - ".\\appveyor\\build.cmd %PYTHON%\\python.exe setup.py test"

after_test:
  - ".\\appveyor\\build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: 'dist\*'

deploy:
  provider: GitHub
  description: ''
  auth_token:
    secure: xJkbMnyaWoKo0ttfZh5Wx3uBYU5/SDYJvQcMWJABKJ3DURaB4oySImDVDR73s+Op
  artifact: /.*\.whl/
  on:
    appveyor_repo_tag: true
